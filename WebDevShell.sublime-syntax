%YAML 1.2
# Credits: Sergey Kozlov (https://github.com/skozlovf/Sublime-GenericConfig)
---
name: WebDevShell Output
scope: source.webdevshell
contexts:
  main:
    # "Color (with alpha): #aacc4322, #bf34fa, #ccc"
    - match: '(?:(?:^\s*)|\s+)#([a-fA-F0-9]{8}|[a-fA-F0-9]{6}|[a-fA-F0-9]{3})\b'
      scope: constant.other.webdevshell

    # One line comment
    - match: (?:(?:^\s*)|\s+)(?:(#.*(?:\n)?)|(--\s+.*(?:\n)?)|(\/\/.*(?:\n)?))$
      captures:
        1: comment.line.number-sign.webdevshell
        2: comment.line.double-dash.webdevshell
        3: comment.line.double-slash.webdevshell
      scope: meta.comment.webdevshell

    # ; one line comment
    - match: (?:(?:^\s*)|\s+)(;\s*(?=.).*(?:\n)?)$
      scope: meta.comment.webdevshell
      captures:
        1: comment.line.number-sign.webdevshell

    # IP
    - match: \b(?:\d+\.){3}\d+(?:(?:\:|\/)\d+)?\b
      scope: meta.ip.webdevshell constant.other.webdevshell

    # Number or number with unit (like 10k, 12M, 92dpi etc) and also hex like values 0xdf
    - match: \b[0-9]+([a-zA-Z]+)?\b
      scope: constant.numeric.webdevshell

    # "function call: name()"
    - match: \b(\w+)\b\(
      scope: meta.function.webdevshell
      captures:
        1: entity.name.function.webdevshell

    # Constant
    - match: \b(?i:true|false)\b
      scope: constant.language.webdevshell

    # Constant
    - match: \b(?<!-)(?i:on|off|yes|no|null|none|nan)(?!-)\b
      scope: constant.language.webdevshell

    # One line word, or word with following {, or [word] or <word>
    - match: (?:^\s*(\w+)\s*(?={))|(?:^\s*(\w+)\s*$)|(^\s*\[.*\]\s*$)|(^\s*\<.*\>\s*$)
      scope: storage.type.webdevshell

    - match: '"'
      push: double_string

    - match: "'"
      push: single_string

    - match: \\"
      push: quoted_double_string

    - match: \\'
      push: quoted_single_string

    # Keywords
    - match: (^\s*|\b)(?<![.-])(function|define|ifn?def|endif|macro|insertmacro|index|location|alias|include|rewrite|if|then|else|start|stop|restart|with|alert|internal)(?![.-])\b
      scope: keyword.other.webdevshell

    # "Var name: %name, %name%, $name, $name$, ${name}, %{name}, %(name), $(name)"
    - match: ([\%\$@]{1,2}\{\w+\}[\%\$@]{0,2})|([\%\$@]{1,2}\(\w+\)[\%\$@]{0,2})|([\%\$@]{1,2}\w+[\%\$@]{0,2})
      scope: storage.source.webdevshell

    # "Constant like names (ie in uppercase: NAME, SOME_NAME)"
    - match: \b[A-Z_][A-Z_0-9]*\b
      scope: support.constant.webdevshell

    # "URL like strings (http://name.org, ssh://111.22.33.4:42)"
    - match: \b(?:(\w+\:\/\/[^,\s]+)|localhost)\b
      scope: meta.url.webdevshell constant.other.webdevshell

    # 'Colorize key in lines like: key = value or key: value or key value'
    - match: ^\s*(\w[\w\-_]*)\s*(\:|=)?
      scope: meta.param.webdevshell
      captures:
        1: variable.parameter.webdevshell
        2: keyword.operator.webdevshell

    # RegExp
    - match: \^.*\$
      scope: string.regexp.webdevshell

    # Operators
    - match: (!|\~|%|=|\^|\+|\-|\<|\>|\?|\/|\*|\\|\||\:|\.|\,)
      scope: keyword.operator.webdevshell

    # Mime types (text/plain, application/x-javascript etc)
    - match: \b(?<!/)[\w\-\.\+]+/[\w\-\.\+]+(?!/)\b
      scope: support.type.webdevshell

  double_string:
      - meta_scope: string.quoted.double.webdevshell
      - match: '"'
        pop: true
      - match: \\\s*"
        scope: constant.character.webdevshell

  single_string:
      - meta_scope: string.quoted.signle.webdevshell
      - match: "'"
        pop: true
      - match: \\\s*'
        scope: constant.character.webdevshell

  quoted_double_string:
      - meta_scope: string.quoted.qdouble.webdevshell
      - match: \\"
        pop: true

  quoted_single_string:
      - meta_scope: string.quoted.qsignle.webdevshell
      - match: \\'
        pop: true